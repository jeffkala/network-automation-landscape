{"github_data":{"https://github.com/CiscoTestAutomation/ncdiff/":{"contributors":{"count":13,"url":"https://github.com/CiscoTestAutomation/ncdiff/graphs/contributors"},"description":"NETCONF Diff Engine","generated_at":"2024-09-03T19:18:36.252236599Z","latest_commit":{"ts":"2024-07-25T16:01:58Z","url":"https://github.com/CiscoTestAutomation/ncdiff/commit/32a3d5d0409a4849771d3aea0f21179ccb868b00"},"participation_stats":[2,3,5,0,0,5,0,2,2,2,0,0,1,0,0,0,0,0,0,5,2,4,6,2,1,2,2,1,0,4,0,0,1,3,0,0,0,0,0,6,0,0,0,0,0,2,4,0,0,0,0,0],"stars":22,"url":"https://github.com/CiscoTestAutomation/ncdiff","first_commit":{"ts":"2018-05-04T14:38:16Z","url":"https://github.com/CiscoTestAutomation/ncdiff/commit/35ec179f303bc3dc65d334cb274dc99ff45aa8f9"},"languages":{"Makefile":2573,"Python":506060},"license":"Apache License 2.0"},"https://github.com/Juniper/py-junos-eznc":{"contributors":{"count":110,"url":"https://github.com/Juniper/py-junos-eznc/graphs/contributors"},"description":"Python library for Junos automation","generated_at":"2024-09-03T19:18:40.626280737Z","latest_commit":{"ts":"2024-05-03T13:42:10Z","url":"https://github.com/Juniper/py-junos-eznc/commit/a64698b280fb717730dddf75a2d4d8cacb2e4775"},"participation_stats":[0,3,2,2,1,0,2,1,0,0,3,0,0,0,0,1,0,0,8,2,1,0,0,0,0,1,0,0,0,0,0,5,0,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":666,"topics":["junos-automation","junos-eznc","junos-pyez","netconf","pyez","python"],"url":"https://github.com/Juniper/py-junos-eznc","first_commit":{"ts":"2013-10-12T22:22:50Z","url":"https://github.com/Juniper/py-junos-eznc/commit/b92a6f8fc9df637e03f0b6e06d8498d491cb23aa"},"languages":{"Dockerfile":856,"Pascal":408,"Puppet":2263,"Python":1133834,"Ruby":134,"Shell":1516},"latest_release":{"ts":"2024-04-12T05:41:50Z","url":"https://github.com/Juniper/py-junos-eznc/releases/tag/2.7.1"},"license":"Apache License 2.0"},"https://github.com/akarneliuk/pygnmi":{"contributors":{"count":25,"url":"https://github.com/akarneliuk/pygnmi/graphs/contributors"},"description":"The pure Python implementation of the gNMI client.","generated_at":"2024-09-03T19:18:42.746309655Z","latest_commit":{"ts":"2024-08-10T18:38:59Z","url":"https://github.com/akarneliuk/pygnmi/commit/18550b1bc9fe2ed4c4bd6a23841d3b749b8bac7b"},"participation_stats":[0,0,0,0,0,4,0,4,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,3,2,6,0,0,5,4,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0],"stars":126,"topics":["automation","gnmi","grpc","network","network-automation","pygnmi","python","telemetry"],"url":"https://github.com/akarneliuk/pygnmi","first_commit":{"ts":"2020-09-14T20:25:05Z","url":"https://github.com/akarneliuk/pygnmi/commit/2a8f6ad96748f4a5be4f35b7fa758352a8cc668f"},"languages":{"Python":141320},"latest_release":{"ts":"2024-03-09T22:04:57Z","url":"https://github.com/akarneliuk/pygnmi/releases/tag/v0.8.14"},"license":"BSD 3-Clause \"New\" or \"Revised\" License"},"https://github.com/arista-eosplus/pyeapi":{"contributors":{"count":52,"url":"https://github.com/arista-eosplus/pyeapi/graphs/contributors"},"description":"Python client for Arista eAPI","generated_at":"2024-09-03T19:18:47.112173322Z","latest_commit":{"ts":"2024-08-28T12:47:03Z","url":"https://github.com/arista-eosplus/pyeapi/commit/43e12101778ef438c6dc621e55ce203e00d75dc0"},"participation_stats":[0,2,0,0,0,0,2,0,0,0,0,0,3,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,9,7,2],"stars":139,"url":"https://github.com/arista-eosplus/pyeapi","first_commit":{"ts":"2014-11-19T01:52:42Z","url":"https://github.com/arista-eosplus/pyeapi/commit/73137f02a8096912fa21577c458e1ffd811a9477"},"languages":{"Makefile":1806,"Python":789674},"latest_release":{"ts":"2024-08-20T13:39:33Z","url":"https://github.com/arista-eosplus/pyeapi/releases/tag/v1.0.4"},"license":"BSD 3-Clause \"New\" or \"Revised\" License"},"https://github.com/carlmontanari/scrapli":{"contributors":{"count":21,"url":"https://github.com/carlmontanari/scrapli/graphs/contributors"},"description":"Fast, flexible, sync/async, Python 3.7+ screen scraping client specifically for network devices","generated_at":"2024-09-03T19:18:50.215910443Z","latest_commit":{"ts":"2024-08-09T22:31:49Z","url":"https://github.com/carlmontanari/scrapli/commit/cc484ab97427620a85248931050ca123219a16da"},"participation_stats":[2,0,0,4,1,1,2,2,1,2,0,0,0,0,0,0,0,1,2,4,6,0,0,0,0,0,0,0,0,0,0,7,0,9,10,1,0,3,1,0,9,0,0,0,0,0,14,3,1,0,0,0],"stars":571,"url":"https://github.com/carlmontanari/scrapli","first_commit":{"ts":"2020-01-27T19:05:41Z","url":"https://github.com/carlmontanari/scrapli/commit/487cef1320f4b531d5554544efe3a18873f56e3e"},"languages":{"Jinja":2765,"Makefile":1988,"Python":864707},"latest_release":{"ts":"2024-07-30T14:29:36Z","url":"https://github.com/carlmontanari/scrapli/releases/tag/2024.07.30"},"license":"MIT License"},"https://github.com/dmulyalin/ttp":{"contributors":{"count":5,"url":"https://github.com/dmulyalin/ttp/graphs/contributors"},"description":"Template Text Parser","generated_at":"2024-09-03T19:18:52.328483398Z","latest_commit":{"ts":"2024-01-31T19:19:16Z","url":"https://github.com/dmulyalin/ttp/commit/d6476d387ca2078e0306c2546148850d3ceb246c"},"participation_stats":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":346,"url":"https://github.com/dmulyalin/ttp","first_commit":{"ts":"2019-10-18T10:34:22Z","url":"https://github.com/dmulyalin/ttp/commit/1dddc309df07baff08d3dbab2b500483f08be363"},"languages":{"Python":898769},"latest_release":{"ts":"2023-06-25T00:31:08Z","url":"https://github.com/dmulyalin/ttp/releases/tag/0.9.5"},"license":"MIT License"},"https://github.com/ktbyers/netmiko":{"contributors":{"count":242,"url":"https://github.com/ktbyers/netmiko/graphs/contributors"},"description":"Multi-vendor library to simplify Paramiko SSH connections to network devices","generated_at":"2024-09-03T19:19:00.718249194Z","latest_commit":{"ts":"2024-09-02T19:27:35Z","url":"https://github.com/ktbyers/netmiko/commit/92ca035c07fa828b03fb966e3d291a7eae2e3d19"},"participation_stats":[0,1,0,0,0,1,9,1,1,0,10,3,0,0,0,1,0,1,6,1,0,3,1,0,0,0,2,0,0,0,0,0,0,1,14,1,1,0,0,0,0,0,2,6,5,0,1,0,2,0,3,2],"stars":3542,"url":"https://github.com/ktbyers/netmiko","first_commit":{"ts":"2014-11-28T21:42:52Z","url":"https://github.com/ktbyers/netmiko/commit/87bdbe14668b08177b5f0c887856e36c95f7e6be"},"languages":{"Jinja":384,"Python":830900,"Shell":21591},"latest_release":{"ts":"2024-07-08T22:22:31Z","url":"https://github.com/ktbyers/netmiko/releases/tag/v4.4.0"},"license":"MIT License"},"https://github.com/networktocode/diffsync":{"contributors":{"count":19,"url":"https://github.com/networktocode/diffsync/graphs/contributors"},"description":"A utility library for comparing and synchronizing different datasets.","generated_at":"2024-09-03T19:19:10.025044856Z","latest_commit":{"ts":"2024-08-20T13:57:19Z","url":"https://github.com/networktocode/diffsync/commit/7ca1717b9d3bce0b0c48063d8f8b20cbff6d6952"},"participation_stats":[0,0,0,0,0,2,3,1,0,0,5,0,0,0,0,0,0,0,0,2,1,4,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,2,1,0,0,0,1,0],"stars":144,"topics":["data-synchronization","diffsync","etl","extract-transform-load","python","source-of-truth","synchronization"],"url":"https://github.com/networktocode/diffsync","first_commit":{"ts":"2020-09-02T13:55:59Z","url":"https://github.com/networktocode/diffsync/commit/4148f9b0ff03a25c6494e9b80cbcfe3415931a75"},"languages":{"Dockerfile":475,"Python":229897},"latest_release":{"ts":"2024-02-01T12:59:10Z","url":"https://github.com/networktocode/diffsync/releases/tag/v2.0.0"},"license":"Other"},"https://github.com/networktocode/netutils":{"contributors":{"count":35,"url":"https://github.com/networktocode/netutils/graphs/contributors"},"description":"Python library that is a collection of functions and objects for common network automation tasks.","generated_at":"2024-09-03T19:19:11.079125052Z","latest_commit":{"ts":"2024-08-06T13:03:09Z","url":"https://github.com/networktocode/netutils/commit/ceb1693c7aaedcc9445a407bb0af7b26c0b16db6"},"participation_stats":[7,0,0,1,0,3,0,2,0,2,0,0,0,2,0,1,0,1,1,2,0,0,3,0,1,3,4,3,1,5,2,3,3,0,0,0,2,0,0,0,0,0,1,0,2,0,0,3,1,0,0,0],"stars":213,"url":"https://github.com/networktocode/netutils","first_commit":{"ts":"2021-05-08T12:45:57Z","url":"https://github.com/networktocode/netutils/commit/b5084bfb8b76413ed10399048e07b07ded84e86f"},"languages":{"Dockerfile":227,"Jinja":59,"Python":6016837,"TypeScript":816},"latest_release":{"ts":"2024-08-05T16:46:34Z","url":"https://github.com/networktocode/netutils/releases/tag/v1.9.1"},"license":"Other"},"https://github.com/networktocode/ntc-templates":{"contributors":{"count":243,"url":"https://github.com/networktocode/ntc-templates/graphs/contributors"},"description":"TextFSM templates for parsing show commands of network devices","generated_at":"2024-09-03T19:19:12.142742504Z","latest_commit":{"ts":"2024-09-03T12:37:54Z","url":"https://github.com/networktocode/ntc-templates/commit/3cc2f9f99c15b99dadf71916c45e008cbe35860e"},"participation_stats":[2,2,1,0,2,4,4,4,13,13,1,0,0,1,2,1,12,5,3,1,2,0,14,0,8,1,4,11,19,22,9,3,1,0,0,0,0,0,4,1,0,5,5,1,8,64,32,12,17,1,1,3],"stars":1087,"url":"https://github.com/networktocode/ntc-templates","first_commit":{"ts":"2016-04-27T17:31:51Z","url":"https://github.com/networktocode/ntc-templates/commit/cc61388f3c6e4543b878e426b30420173d6b6bc4"},"languages":{"Dockerfile":1318,"Python":42314},"latest_release":{"ts":"2024-07-17T20:56:08Z","url":"https://github.com/networktocode/ntc-templates/releases/tag/v6.0.0"},"license":"Other"},"https://github.com/pydantify/pydantify":{"contributors":{"count":3,"url":"https://github.com/pydantify/pydantify/graphs/contributors"},"description":"Transform YANG models into pydantic datastructures","generated_at":"2024-09-03T19:19:26.330038417Z","latest_commit":{"ts":"2023-08-09T22:08:12Z","url":"https://github.com/pydantify/pydantify/commit/566dd6dacb3136f9ca23a4f1812c00c8b2976d2d"},"participation_stats":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":47,"topics":["automation","hacktoberfest","networking","pydantic","python","yang"],"url":"https://github.com/pydantify/pydantify","first_commit":{"ts":"2022-09-19T19:59:42Z","url":"https://github.com/pydantify/pydantify/commit/8f5de65d8087fdc989da441831749cae51c75ad8"},"languages":{"Dockerfile":1693,"Makefile":768,"Python":113207},"latest_release":{"ts":"2023-01-06T23:37:38Z","url":"https://github.com/pydantify/pydantify/releases/tag/v0.5.1"},"license":"MIT License"},"https://github.com/robshakir/pyangbind":{"contributors":{"count":26,"url":"https://github.com/robshakir/pyangbind/graphs/contributors"},"description":"A plugin for pyang that creates Python bindings for a YANG model.","generated_at":"2024-09-03T19:19:28.496646981Z","latest_commit":{"ts":"2024-08-05T06:59:51Z","url":"https://github.com/robshakir/pyangbind/commit/35fb9a81670a900d6580f725ad624d82f591d736"},"participation_stats":[0,0,0,2,1,2,1,1,0,0,0,0,4,0,0,0,1,1,0,0,0,0,1,1,0,3,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0],"stars":201,"url":"https://github.com/robshakir/pyangbind","first_commit":{"ts":"2015-04-12T21:04:05Z","url":"https://github.com/robshakir/pyangbind/commit/49ace01f5d5582f324a5d671ffe96fec055aece3"},"languages":{"Python":362254,"Shell":915},"latest_release":{"ts":"2024-08-05T20:26:32Z","url":"https://github.com/robshakir/pyangbind/releases/tag/0.8.6"},"license":"Other"}},"items":[{"category":"Python Eco-System","homepage_url":"https://github.com/carlmontanari/scrapli","id":"python-eco-system--software-libraries--scrapli","logo":"logos/2581d6ae5b5fa55410e01b2c6e840772378f445d49abee87239efff564a4960f.svg","name":"Scrapli","subcategory":"Software Libraries","website":"https://github.com/carlmontanari/scrapli","description":"Scrapli is a Python library focused on connecting to network devices (routers/switches/firewalls/etc.) via Telnet or SSH. It aims to be fast, flexible, and easy to use for both synchronous and asynchronous operations.","documentation_url":"https://carlmontanari.github.io/scrapli/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/carlmontanari/scrapli","primary":true}],"summary":{"personas":["Network Engineers","DevOps Engineers","Network Automation Specialists"],"tags":["network automation","SSH","Telnet","async","Python"],"use_case":"Network device automation, configuration management, data retrieval from network devices"}},{"category":"Python Eco-System","homepage_url":"https://github.com/ktbyers/netmiko","id":"python-eco-system--software-libraries--netmiko","logo":"logos/90d56487f0bf9f7913eabc85d056cfada74e67a37af60dab723a5c3d0432e203.png","name":"Netmiko","subcategory":"Software Libraries","website":"https://github.com/ktbyers/netmiko","description":"Netmiko is a multi-vendor library to simplify Paramiko SSH connections to network devices. It provides a unified API to connect to various network devices.","documentation_url":"https://ktbyers.github.io/netmiko/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/ktbyers/netmiko","primary":true}],"summary":{"personas":["Network Engineers","Network Automation Engineers"],"tags":["network automation","SSH","multi-vendor","Python"],"use_case":"Network device connection and configuration, multi-vendor support"}},{"category":"Python Eco-System","homepage_url":"https://www.juniper.net/documentation/product/en_US/junos-pyez","id":"python-eco-system--software-libraries--pyez","logo":"logos/10ac94ab168145a58a8803135215f9488f6256b90f21f437115e5e56c14c5b20.png","name":"PyEZ","subcategory":"Software Libraries","website":"https://www.juniper.net/documentation/product/en_US/junos-pyez","description":"Juniper PyEZ is a Python library for managing and automating Juniper devices. It provides a Pythonic interface to the NETCONF API and other management interfaces.","documentation_url":"https://www.juniper.net/documentation/product/en_US/junos-pyez","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/Juniper/py-junos-eznc","primary":true}],"summary":{"personas":["Network Engineers","Juniper Specialists","Automation Engineers"],"tags":["Juniper","network automation","NETCONF","Python"],"use_case":"Juniper device automation, configuration management, operational state retrieval"}},{"category":"Python Eco-System","homepage_url":"https://pyeapi.readthedocs.io/en/master/index.html","id":"python-eco-system--software-libraries--pyeapi","logo":"logos/dce872e7d3f3eebd69921896480078037be0229147a8018df21253b0f96b64f9.png","name":"pyeapi","subcategory":"Software Libraries","website":"https://pyeapi.readthedocs.io/en/master/index.html","description":"The Python Client for eAPI (pyeapi) is a native Python library wrapper around Arista EOS eAPI.","documentation_url":"https://pyeapi.readthedocs.io/en/master/index.html","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/arista-eosplus/pyeapi","primary":true}],"summary":{"personas":["Network Engineers","Arista Specialists","Automation Engineers"],"tags":["Arista","network automation","eAPI","Python"],"use_case":"Arista device automation, configuration management, operational state retrieval"}},{"category":"Python Eco-System","homepage_url":"https://github.com/networktocode/ntc-templates","id":"python-eco-system--software-libraries--ntc-templates","logo":"logos/b348f873e80cdd3157d816240ba3b440227fc47c3a4e204805f086689a4844ae.png","name":"NTC Templates","subcategory":"Software Libraries","website":"https://github.com/networktocode/ntc-templates","description":"Repository of TextFSM Templates for Network Devices, and Python wrapper for TextFSM's CliTable. TextFSM is a tool to help make parsing cli commands more manageable.","documentation_url":"https://ntc-templates.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/ntc-templates","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["TextFSM","multi-vendor","CLI","Python"],"use_case":"Parsing outputs from network devices"}},{"category":"Python Eco-System","homepage_url":"https://github.com/dmulyalin/ttp","id":"python-eco-system--software-libraries--ttp","logo":"logos/8306ad871551aa9ab6ac4fbf475571251ca442bb8dfa7a4073496f06a160e3f1.png","name":"TTP","subcategory":"Software Libraries","website":"https://github.com/dmulyalin/ttp","description":"Template Text Parser is a Python library for semi-structured text parsing using templates.","documentation_url":"https://ttp.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/dmulyalin/ttp","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["screen-scraping","parsing","Python","template"],"use_case":"Parsing outputs from semi-structured text"}},{"category":"Python Eco-System","homepage_url":"https://netutils.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--netutils","logo":"logos/efb0abf7b23bc057396af85aea4637c0a4ef0ed31afe159e58a311c865735c5f.png","name":"netutils","subcategory":"Software Libraries","website":"https://netutils.readthedocs.io/en/latest/","description":"Collection of functions that are used in the common network automation tasks.","documentation_url":"https://netutils.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","helper functions","jinja template"],"use_case":"Tasks such as converting a BGP ASN to and from dotted format, normalizing an interface name, or 'type 5' encrypting a password."}},{"category":"Python Eco-System","homepage_url":"https://ncclient.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--ncclient","logo":"logos/614426f2d90e234bbe4302ab8f1bd79748e1eecc08020846c51b985d1b052fb1.webp","name":"ncclient","subcategory":"Software Libraries","website":"https://ncclient.readthedocs.io/en/latest/","description":"ncclient is a Python library that facilitates client-side scripting and application development around the NETCONF protocol.","documentation_url":"https://ncclient.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","netconf"],"use_case":"NETCONF client to interact with network devices with NETCONF RPCs"}},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--diffsync","logo":"logos/aace2c73b9323ac1ea4326e4bb08af42217f34f7d0784dd994eae913d3ff373d.png","name":"DiffSync","subcategory":"Software Libraries","website":"https://diffsync.readthedocs.io/en/latest/index.html","description":"DiffSync is a utility library that can be used to compare and synchronize different datasets.","documentation_url":"https://diffsync.readthedocs.io/en/latest/index.html","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/diffsync","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","datasets","diff","ssot"],"use_case":"DiffSync is at its most useful when you have multiple sources or sets of data to compare and/or synchronize"}},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--ncdiff","logo":"logos/e4ba069e5dd443c224011a82ac94d3b0b5519cd73b8baf1824dc9365fb6bfb0a.png","name":"ncdiff","subcategory":"Software Libraries","website":"https://diffsync.readthedocs.io/en/latest/index.html","description":"Extended ncclient NETCONF client with diff capabilities.","documentation_url":"https://ncdiff.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/CiscoTestAutomation/ncdiff/","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","diff","netconf"],"use_case":"Send and get NETCONF RPCs and diff, combine or pedict configurations"}},{"category":"Python Eco-System","homepage_url":"https://github.com/akarneliuk/pygnmi/","id":"python-eco-system--software-libraries--pygnmi","logo":"logos/0319da722a93eeaa145acb08be71853f99b7bcd271ca2c268c027d8ec014352f.png","name":"pyGNMI","subcategory":"Software Libraries","website":"https://github.com/akarneliuk/pygnmi/","description":"Python gNMI client","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/akarneliuk/pygnmi","primary":true}],"summary":{"personas":["Network Engineers","SREs","Network Automation Specialists"],"tags":["gNMI","network automation","telemetry","Python"],"use_case":"gNMI-based network device management, telemetry collection"},"youtube_url":"https://www.youtube.com/watch?v=NooE_uHIgys&list=PLsTgo2tBPnTwmeP9zsd8B_tZR-kbguvla"},{"category":"Python Eco-System","homepage_url":"https://github.com/robshakir/pyangbind","id":"python-eco-system--software-libraries--pyangbind","logo":"logos/8cb9e9e0a20bae74c015677adf6702bddb6a2c1a5bff667248ca96828cf2bd40.png","name":"PyangBind","subcategory":"Software Libraries","website":"https://github.com/robshakir/pyangbind","description":"Pyang plugin to create Python bindings for a YANG model.","documentation_url":"https://github.com/robshakir/pyangbind/blob/master/docs/README.md","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/robshakir/pyangbind","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","yang","bindings"],"use_case":"PyangBind converts YANG models into Python classes, enabling easy programmatic interaction with network configurations for automation and management."}},{"category":"Python Eco-System","homepage_url":"https://pydantify.github.io/pydantify/","id":"python-eco-system--software-libraries--pydantify","logo":"logos/42232bc2c9a60f717602a716e2293f02681a671e0490de79dae19e0759164499.png","name":"pydantify","subcategory":"Software Libraries","website":"https://pydantify.github.io/pydantify/","description":"Transform YANG models into Pydantic datastructures that can be initialized with config values and serialized.","documentation_url":"https://pydantify.github.io/pydantify/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/pydantify/pydantify","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","yang","bindings","netconf","restconf","pydantic","model"],"use_case":"Pydantify enables seamless conversion of YANG models into Pydantic data structures, allowing for easy initialization, validation, and serialization of network configuration data in a Pythonic way."}}]}